[gd_scene load_steps=7 format=3 uid="uid://dt52qc3ix7pxk"]

[ext_resource type="Texture2D" uid="uid://r3y4sds8jlbg" path="res://Assets/fireelemental.png" id="1_8gql2"]

[sub_resource type="GDScript" id="1"]
script/source = "extends CharacterBody2D

@onready var animation = $AnimationPlayer
@export var direction: int = 1 # 1 = right, -1 left


const SPEED = 10
const GRAVITY = 200
const UP_VECTOR = Vector2(0,-1) #indicator, how the up direction is defined 

var climbing_dir = 1 # 1 down, -1 up

var is_climbing_ladder = false
var last_ladder_id = 0
var last_body_id = 0

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	floor_snap_length = 2.0
	if  direction == 1:
		$Sprite2D.flip_h = false
	else:
		$Sprite2D.flip_h = true
	
	animation.play(\"moving\")
	
	
	if is_on_floor() and not is_climbing_ladder:
		velocity.y = 0
		
		if floor(position.x) == 216:
			direction = -1
			last_ladder_id = 0
		if floor(position.x) == 8:
			direction = 1
			last_ladder_id = 0
			
		velocity.x = direction * SPEED

	else:
		velocity.x = 0
		if not is_climbing_ladder:
			velocity.y += GRAVITY * delta # make fall faster the longer the fall
		else:
			velocity.y = 0

	handle_ladder_decision()
	handle_climb_platform()
	
	set_velocity(velocity)
	# TODOConverter40 looks that snap in Godot 4.0 is float, not vector like in Godot 3 - previous value `Vector2(0,1)`
	set_up_direction(UP_VECTOR)
	move_and_slide()
	
	handle_collision()


func handle_ladder_decision():

	if not is_climbing_ladder:
		
		#check for ladder climbing up
		$RayCastUp.force_raycast_update()
		var collider = $RayCastUp.get_collider()

		if collider != null \\
			and collider.name.begins_with(\"Ladder\") \\
			and last_ladder_id != collider.get_instance_id():
				
			last_ladder_id = collider.get_instance_id()
			randomize()
			var random_val = randi() % 3 

			if random_val == 0:
				return
			elif random_val == 1:
				direction = direction * -1
			else:
				position.y -= 2 # need to get off ground first
				climbing_dir = -1
				is_climbing_ladder = true
				$RayCastUp.collide_with_areas = false #during climbing we only need to check for platform (body)
		
		# check for ladder climbing down
		$RayCastDown.force_raycast_update()
		collider = $RayCastDown.get_collider()

		if collider != null \\
			and collider.name.begins_with(\"Ladder\") \\
			and last_ladder_id != collider.get_instance_id():	

				randomize()
				var random_val = randi() % 2 #33% chance of falling
				random_val = 1
				if random_val == 1:
					position.y += 4
					climbing_dir = 1
					is_climbing_ladder = true
					$RayCastDown.collide_with_bodies = true
					$RayCastDown.collide_with_areas = false #during climbing we only need to check for platform (body)
					

	else:

		velocity.y = climbing_dir * SPEED
		var raycast = null
		if climbing_dir == 1:
			raycast = $RayCastDown
		else:
			raycast = $RayCastUp

		raycast.force_raycast_update()
		var collider = raycast.get_collider()
		if collider == null:
			return

		if collider.name.begins_with(\"Platform\"):
			if climbing_dir == -1:
				position.y -= 5
			velocity.y = 0
			is_climbing_ladder = false
			raycast.collide_with_areas = true


func handle_climb_platform():
	# handle ascending platform climbing
	var raycast: RayCast2D = null
	if direction == 1:
		raycast = $RayCastRight
	else:
		raycast = $RayCastLeft
	raycast.force_raycast_update()
	var collider: Object = raycast.get_collider()
	while collider != null and collider.name.begins_with(\"Plat\"):
		raycast.force_raycast_update()
		collider = raycast.get_collider()
		if collider != null and collider.name.begins_with(\"Plat\"):
			position.y -= 1
		
			
func handle_collision():
	# handle collision with non player bodies
	if get_slide_collision_count() > 0:
		for i in range(get_slide_collision_count()):
			var collider: Object = get_slide_collision(i).get_collider()
			if collider != null:
				if \"FireElemental\" in collider.name:
					if is_climbing_ladder:
						climbing_dir = -1 * climbing_dir
					else:
						direction = -direction
						position.y -= 5
"

[sub_resource type="RectangleShape2D" id="2"]
size = Vector2(34.2857, 15)

[sub_resource type="RectangleShape2D" id="4"]
size = Vector2(20, 25)

[sub_resource type="Animation" id="3"]
length = 0.8
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.4),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [0, 1]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sprite2D:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.4),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [Vector2(0, -9), Vector2(0, -8)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_vnhsf"]
_data = {
"moving": SubResource("3")
}

[node name="FireElemental" type="CharacterBody2D"]
script = SubResource("1")

[node name="Sprite2D" type="Sprite2D" parent="."]
position = Vector2(0, -9)
texture = ExtResource("1_8gql2")
hframes = 2
vframes = 2

[node name="CollisionShapePhysicEngine" type="CollisionShape2D" parent="."]
position = Vector2(0, -0.75)
scale = Vector2(0.35, 0.1)
shape = SubResource("2")

[node name="FireElemental" type="Area2D" parent="."]

[node name="FireElemental" type="CollisionShape2D" parent="FireElemental"]
position = Vector2(0, -9)
scale = Vector2(0.6, 0.4)
shape = SubResource("4")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_vnhsf")
}

[node name="RayCastRight" type="RayCast2D" parent="."]
position = Vector2(6, 0)
scale = Vector2(0.2, 0.1)
target_position = Vector2(1, 0)

[node name="RayCastLeft" type="RayCast2D" parent="."]
position = Vector2(-6, 0)
scale = Vector2(0.2, 0.1)
target_position = Vector2(-1, 0)

[node name="RayCastUp" type="RayCast2D" parent="."]
position = Vector2(0, -2)
scale = Vector2(0.2, 0.3)
target_position = Vector2(0, -4)
collide_with_areas = true

[node name="RayCastDown" type="RayCast2D" parent="."]
position = Vector2(0, 1)
scale = Vector2(0.2, 0.3)
target_position = Vector2(0, 4)
collide_with_areas = true
collide_with_bodies = false
