[gd_scene load_steps=13 format=2]

[ext_resource path="res://Assets/jumpman.png" type="Texture" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

onready var animation = $AnimationPlayer

const SPEED = 60
const LADDER_SPEED = 10
const GRAVITY = 200
const JUMP_POWER = 70

# indicator, how the up direction is defined 
const UP_VECTOR = Vector2(0,-1) 

var velocity = Vector2()

var jump_mode = false

var is_connected_to_ladder = false
var has_reached_top_ladder = false


# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.

func _process(delta):
	velocity.x = 0
	
	if is_connected_to_ladder:
		velocity.y = 0
	else:
		velocity.y += GRAVITY * delta # make fall faster the longer the fall
	
	if jump_mode and is_on_floor():
		jump_mode = false
	
	check_key_input()
	handle_climb_platform()
	handle_climb_ladder()

	velocity = move_and_slide(velocity, UP_VECTOR)
	
	if is_connected_to_ladder:
		ladder_animation()
	else: 
		standard_animation()



func check_key_input():
	
	if not is_connected_to_ladder:
		if Input.is_action_pressed(\"left\") and position.x > 8:
			velocity.x = -1 * SPEED
		
		if Input.is_action_pressed(\"right\") and position.x < 216:
			velocity.x = 1 * SPEED
		
		if Input.is_action_just_pressed(\"jump\") and is_on_floor():
			velocity.y = -JUMP_POWER
			jump_mode = true
	else:
		if Input.is_action_pressed(\"jump\"):
			velocity.y = -1 * LADDER_SPEED
		if Input.is_action_pressed(\"down\"):
			velocity.y = 1 * LADDER_SPEED


func standard_animation():
	
	if velocity.x > 0:
		$Sprite.flip_h = false
		animation.play(\"jump\") if jump_mode else animation.play(\"running\")
	elif velocity.x < 0:
		$Sprite.flip_h = true
		animation.play(\"jump\") if jump_mode else animation.play(\"running\")
	else:
		if not $Sprite.frame == 7:
			animation.play(\"jump\") if jump_mode else animation.play(\"idle\")


func ladder_animation():
	
	if velocity.y == 0:
		animation.stop()
		
	if velocity.y != 0:
		# normal climbing
		if not has_reached_top_ladder:
			animation.play(\"climbing\")

		if has_reached_top_ladder and velocity.y < 0:
			self.set_process(false)
			animation.play(\"climbing_platform_edge_up\")
			yield(animation, \"animation_finished\")
			position.y -= 9
			$Sprite.frame = 7
			is_connected_to_ladder = false
			has_reached_top_ladder = false
			self.set_process(true)
		
		if has_reached_top_ladder and velocity.y > 0:
			self.set_process(false)
			animation.play_backwards(\"climbing_platform_edge_up\")
			yield(animation, \"animation_finished\")
			has_reached_top_ladder = false
			self.set_process(true)


func handle_climb_platform():
	# handle ascending platform climbing
	for body in $ClimbPlatformHitBox.get_overlapping_bodies():
		if body.name.begins_with(\"Platform\"):
			if velocity.x > 0:
				position += Vector2(1,-1)
			elif velocity.x < 0:
				position += Vector2(-1,-1)


func handle_climb_ladder():
	# handle climbing up and down a ladder

	# action, when already conntected to a ladder
	if is_connected_to_ladder:		
		
		# stop climbing ladder (down) and go to ground
		for body in $ClimbLadderBottomHitBox.get_overlapping_bodies():
			if body.name.begins_with(\"Platform\") and Input.is_action_pressed(\"down\"):
				is_connected_to_ladder = false 
				return
		
		# stop climbing ladder (up) and go to next level platform
		for area in $ClimbLadderTopHitBox.get_overlapping_areas() :
			if area.name == \"LadderTop\" and Input.is_action_pressed(\"jump\"):
				has_reached_top_ladder = true
				return
		
		# refuse climbing if no ladder element is found (broken ladders)
		for area in $ClimbLadderBottomHitBox.get_overlapping_areas():
			if area.name.begins_with(\"Ladder\"):
				return
		position.y += 1
		
	# actions, when not conntected to a ladder	
	else:
		
		# check if Player can be connected to a ladder	
		for area in $ClimbLadderBottomHitBox.get_overlapping_areas():
			
			# connect to ladder in order to climb up
			if area.name == \"LadderBottom\" and Input.is_action_pressed(\"jump\") and is_on_floor():
				is_connected_to_ladder = true
				
			# connect to ladder in order to climb down
			if area.name == \"LadderTop\" and Input.is_action_pressed(\"down\") and is_on_floor():
				position.y += 9
				$Sprite.frame = 6
				has_reached_top_ladder = true
				is_connected_to_ladder = true
			


"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 10, 8 )

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 61.5385, 10 )

[sub_resource type="Animation" id=12]
resource_name = "climbing"
length = 0.5
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 4 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:flip_h")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, true ]
}

[sub_resource type="Animation" id=5]
resource_name = "climbing_platform_edge_up"
length = 0.6
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 5, 6 ]
}

[sub_resource type="Animation" id=6]
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 0, 0 ]
}

[sub_resource type="Animation" id=7]
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 3, 0 ]
}

[sub_resource type="Animation" id=8]
length = 0.3
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.15 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 1, 2 ]
}

[sub_resource type="RectangleShape2D" id=9]

[sub_resource type="RectangleShape2D" id=10]

[sub_resource type="RectangleShape2D" id=11]

[node name="Player" type="KinematicBody2D"]
script = SubResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
position = Vector2( -1, -8 )
texture = ExtResource( 1 )
flip_h = true
vframes = 2
hframes = 6
frame = 4

[node name="ObjectHitBox" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="ObjectHitBox"]
position = Vector2( 0, -8 )
scale = Vector2( 0.6, 1.05 )
shape = SubResource( 2 )

[node name="ClimbPlatformHitBox" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="ClimbPlatformHitBox"]
position = Vector2( 0, -1 )
scale = Vector2( 0.099, 0.1 )
shape = SubResource( 3 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/climbing = SubResource( 12 )
anims/climbing_platform_edge_up = SubResource( 5 )
anims/idle = SubResource( 6 )
anims/jump = SubResource( 7 )
anims/running = SubResource( 8 )

[node name="PlatformCollisionShape" type="CollisionShape2D" parent="."]
visible = false
position = Vector2( 0, -1 )
scale = Vector2( 0.5, 0.1 )
shape = SubResource( 9 )

[node name="ClimbLadderBottomHitBox" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="ClimbLadderBottomHitBox"]
position = Vector2( 0, 5.96046e-08 )
scale = Vector2( 0.2, 0.1 )
shape = SubResource( 10 )

[node name="ClimbLadderTopHitBox" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="ClimbLadderTopHitBox"]
position = Vector2( 0, -6 )
scale = Vector2( 0.2, 0.1 )
shape = SubResource( 11 )
